// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using TradeMonkey.Data.Context.Configurations;
using TradeMonkey.Data.Entity;
#nullable disable

namespace TradeMonkey.Data.Context;

public partial class TmDBContext : DbContext
{
    public TmDBContext()
    {
    }

    public TmDBContext(DbContextOptions<TmDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Correlation_Datum> Correlation_Datums { get; set; }

    public virtual DbSet<Indicator_Datum> Indicator_Datums { get; set; }

    public virtual DbSet<Indicies_Datum> Indicies_Datums { get; set; }

    public virtual DbSet<Kucoin_Account> Kucoin_Accounts { get; set; }

    public virtual DbSet<Kucoin_AllTick> Kucoin_AllTicks { get; set; }

    public virtual DbSet<PricePrediction_Datum> PricePrediction_Datums { get; set; }

    public virtual DbSet<QuantmetricsT1_Datum> QuantmetricsT1_Datums { get; set; }

    public virtual DbSet<QuantmetricsT2_Datum> QuantmetricsT2_Datums { get; set; }

    public virtual DbSet<ResistanceSupport_Datum> ResistanceSupport_Datums { get; set; }

    public virtual DbSet<ScenarioAnalysis_Datum> ScenarioAnalysis_Datums { get; set; }

    public virtual DbSet<Sentiments_Datum> Sentiments_Datums { get; set; }

    public virtual DbSet<TokenMetrics_Token> TokenMetrics_Tokens { get; set; }

    public virtual DbSet<TraderGrades_Datum> TraderGrades_Datums { get; set; }

    public virtual DbSet<TradingIndicato_rDatum> TradingIndicato_rDatums { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer("Data Source=HP\\MFSQL;Initial Catalog=TradeMonkey;Integrated Security=True;Encrypt=false;TrustServerCertificate=Yes");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
            modelBuilder.ApplyConfiguration(new Configurations.Correlation_DatumConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.Indicator_DatumConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.Indicies_DatumConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.Kucoin_AccountConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.Kucoin_AllTickConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PricePrediction_DatumConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.QuantmetricsT1_DatumConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.QuantmetricsT2_DatumConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ResistanceSupport_DatumConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ScenarioAnalysis_DatumConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.Sentiments_DatumConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.TokenMetrics_TokenConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.TraderGrades_DatumConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.TradingIndicato_rDatumConfiguration());

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
